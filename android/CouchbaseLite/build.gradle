apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: "com.jfrog.artifactory"
apply plugin: 'maven-publish'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName version
        //archivesBaseName = "couchbase-lite-android"
        project.archivesBaseName = "couchbase-lite-android-${versionName}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters 'x86', 'armeabi-v7a', 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                //TODO: c++_static
                arguments '-DANDROID_STL=gnustl_static', "-DANDROID_TOOLCHAIN=clang", '-DANDROID_PLATFORM=android-19', '-DJNI=TRUE'
                cppFlags "-std=c++11 -frtti -fexceptions -fPIC"
                // explicitly build libs
                targets 'LiteCoreJNI'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "${rootDir}/../libs/couchbase-lite-core/CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            java.srcDirs = [
                    "src/main/java",                                  // android specific codes
                    "${rootDir}/../shared/src/main/java",             // shared java codes
                    "${rootDir}/../libs/couchbase-lite-core/Java/src" // lite-core java codes
            ]
        }
        androidTest {
            java.srcDirs = [
                    "src/androidTest/java",                                        // android specific codes
                    "${rootDir}/../libs/couchbase-lite-core/Java/androidTest/java" // lite-core java codes
            ]
            assets.srcDirs = [
                    "src/main/assets",
                    "src/androidTest/assets",
                    "${rootDir}/../libs/couchbase-lite-core/C/tests/data" // lite-core test assets
            ]
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.2.0'
    testCompile 'junit:junit:4.12'
}

// ----------------------------------------------------------------
// Deployment
// ----------------------------------------------------------------

// Generate source.jar
task sourcesJar(type: Jar) {
    baseName = project.name
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

// Generate javadoc
task javadoc(type: Javadoc) {
    source android.sourceSets.main.java.srcDirs
    options {
        title = "Couchbase Lite ${project.version}"
        memberLevel = JavadocMemberLevel.PROTECTED
        docEncoding = 'UTF-8'
        encoding = 'UTF-8'
        charSet = 'UTF-8'
        locale = 'en_US'

        links "https://docs.oracle.com/javase/7/docs/api/"
        linksOffline "https://developer.android.com/reference/", "${project.android.sdkDirectory}/docs/reference"
    }
    exclude '**/internal/**'
    exclude '**/litecore/**'
}

// Generate javadoc.jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    baseName = project.name
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

def siteUrl = 'http://developer.couchbase.com/mobile/'
def gitUrl = 'https://github.com:couchbase/couchbase-lite-android.git'

// JFrog Bintray - JCenter deployment
bintray {
    user = bintrayUser
    key =  bintrayKey


    publications = ['maven']

    pkg {
        repo = 'couchbase'
        name = 'couchbase-lite-android'
        desc = 'Couchbase-Lite-Android is a lightweight embedded NoSQL database engine for Android with the built-in ability to sync to Couchbase Server on the backend.'
        userOrg = 'couchbase'
        licenses = ['Couchbase Community Edition License Agreement']
        labels = ['couchbase lite', 'android', 'sync', 'mobile']
        vcsUrl = gitUrl
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/couchbase/couchbase-lite-android/issues'
        publicDownloadNumbers = false
        version {
            name = version
        }
    }
}

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "Couchbase Community Edition License Agreement"
            url "http://www.couchbase.com/agreement/community"
            distribution "repo"
        }
    }
    developers {
        developer {
            name "Couchbase Mobile"
            email "mobile@couchbase.com"
            organization 'Couchbase'
            organizationUrl 'http://www.couchbase.com'
        }
    }
    issueManagement {
        system 'github'
        url 'https://github.com/couchbase/couchbase-lite-android/issues'
    }
    scm {
        connection gitUrl
        developerConnection gitUrl
        url siteUrl
    }
}

publishing {
    publications {
        maven(MavenPublication) {

            groupId 'com.couchbase.lite'
            artifactId 'couchbase-lite-android'
            version version

            artifact bundleRelease
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.children().last() + pomConfig
            }
        }
    }

}

/* ------- For TEST -------
publishing {
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url "$buildDir/repo"
        }
    }
}
*/

// https://www.jfrog.com/confluence/display/RTF/Gradle+Artifactory+Plugin
artifactory {
    contextUrl = 'https://oss.jfrog.org/artifactory'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = bintrayUser
            password = bintrayKey
        }
        defaults {
            publications('maven')
            publishPom = true
            publishIvy = false
        }
    }
}